---
import { IProjectDetails } from "@types";
const { projectDetail } = Astro.props as IProjectDetails;
const { title, thumbnail, liveUrl, githubUrl, description, technologies, achievements } = projectDetail;
---

<article 
    class="w-full bg-white dark:bg-dark-gray rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden group border border-gray-200 dark:border-gray-700 hover:border-blue/30 dark:hover:border-blue/40"
    role="article"
    aria-labelledby={`project-${title.toLowerCase().replace(/\s+/g, '-')}`}
>
    <!-- Project Image -->
    <div class="relative h-48 overflow-hidden bg-gradient-to-br from-blue/10 to-purple-500/10">
        <img
            src={thumbnail}
            class="w-full h-full object-cover group-hover:scale-105 transition-all duration-500"
            loading="lazy"
            width="100%"
            height="100%"
            alt={`Screenshot of ${title} project`}
        />
        
        <!-- Action Buttons -->
        <div class="absolute top-3 right-3 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            {
                githubUrl && (
                    <a
                        href={githubUrl}
                        class="text-white p-2 bg-black/70 hover:bg-black/90 rounded-full backdrop-blur-sm transition-colors"
                        aria-label={`View ${title} source code on GitHub`}
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        >
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                        </svg>
                    </a>
                )
            }

            {
                liveUrl && (
                    <a
                        href={liveUrl}
                        class="text-white p-2 bg-blue/70 hover:bg-blue/90 rounded-full backdrop-blur-sm transition-colors"
                        aria-label={`View ${title} live demo`}
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        >
                            <path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3" />
                            <line x1="8" y1="12" x2="16" y2="12" />
                        </svg>
                    </a>
                )
            }
        </div>
    </div>

    <!-- Project Content -->
    <div class="p-6">
        <h3 
            id={`project-${title.toLowerCase().replace(/\s+/g, '-')}`}
            class="text-xl font-semibold text-dark dark:text-light mb-3 font-outfit group-hover:text-blue dark:group-hover:text-blue transition-colors"
        >
            {title}
        </h3>
        
        {description && (
            <p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed text-sm">
                {description}
            </p>
        )}

        <!-- Technologies -->
        {technologies && technologies.length > 0 && (
            <div class="mb-4">
                <h4 class="text-xs font-semibold text-dark dark:text-light mb-2 uppercase tracking-wide opacity-80">
                    Technologies
                </h4>
                <div class="flex flex-wrap gap-2">
                    {technologies.map((tech) => (
                        <span class="px-2 py-1 bg-blue/10 dark:bg-blue/20 text-blue dark:text-blue-300 text-xs font-medium rounded-full border border-blue/20">
                            {tech}
                        </span>
                    ))}
                </div>
            </div>
        )}

        <!-- Key Achievements -->
        {achievements && achievements.length > 0 && (
            <div>
                <h4 class="text-xs font-semibold text-dark dark:text-light mb-2 uppercase tracking-wide opacity-80">
                    Key Features
                </h4>
                <ul class="space-y-1">
                    {achievements.map((achievement) => (
                        <li class="text-xs text-gray-600 dark:text-gray-300 flex items-start">
                            <span class="text-blue mr-2 mt-0.5 font-bold">â€¢</span>
                            {achievement}
                        </li>
                    ))}
                </ul>
            </div>
        )}
    </div>
</article>
